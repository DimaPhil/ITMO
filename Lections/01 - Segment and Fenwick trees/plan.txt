1. Сумма на отрезке, без update-ов. Префиксные суммы - O(1)
2. Минимум/максимум на отрезке, без update-ов. Sparse table - O(NlogN) precalc + O(1) query
3. Сумма/минимум/максимум на отрезке с update-ом одного элемента - дерево отрезков (снизу, сверху)
Операции - моноид
http://neerc.ifmo.ru/wiki/index.php?title=%D0%A0%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F_%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%B0_%D0%B2_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%B5_%D0%BE%D1%82%D1%80%D0%B5%D0%B7%D0%BA%D0%BE%D0%B2_%D1%81%D0%B2%D0%B5%D1%80%D1%85%D1%83
http://neerc.ifmo.ru/wiki/index.php?title=%D0%A0%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F_%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%B0_%D0%B2_%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%B5_%D0%BE%D1%82%D1%80%D0%B5%D0%B7%D0%BA%D0%BE%D0%B2_%D1%81%D0%BD%D0%B8%D0%B7%D1%83
4. Обновить на отрезке и узнать элемент - массив разностей + дерево отрезков снизу
5. Дерево отрезков с групповыми операциями:
Ассоциативность, дистрибутивность
. - обновление
o - запрос
a . (b . c)  = (a . b) . c
(a o b) . c = (a . c) o (b . c)

Задачи:

1. Посчитать, сколько встречается раз лучший элемент
2. k-ый ноль
3. Найти подотрезок с максимальной суммой - храним 4 величины
Умеем объединять
Все то же самое
Только в get аккуратно с пустым отрезком - не запускаться от него
4. Поиск наименьшего числа, >= x на отрезке (+ если есть update - надо юзать multiset)

Дерево Фенвика:

http://neerc.ifmo.ru/wiki/index.php?title=%D0%94%D0%B5%D1%80%D0%B5%D0%B2%D0%BE_%D0%A4%D0%B5%D0%BD%D0%B2%D0%B8%D0%BA%D0%B0

F(i) = i & (i + 1)
T_i = sum k: {F(i), i} (a_k)
F(i) = i - 2^h(i) + 1, h(i) - количество единиц в конце бинарной записи

a_k += d <=> += d для всех i, что F(i) <= k <= i